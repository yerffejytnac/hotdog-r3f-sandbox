/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import type React from "react";
import { useEffect, useMemo, useRef } from "react";
import * as THREE from "three";
import type { GLTF } from "three-stdlib";
import { theme } from "@/styles";

type GLTFResult = GLTF & {
  nodes: {
    D1_1: THREE.SkinnedMesh;
    D2_1: THREE.SkinnedMesh;
    G1_1: THREE.SkinnedMesh;
    G2_1: THREE.SkinnedMesh;
    H1_1: THREE.SkinnedMesh;
    h2: THREE.SkinnedMesh;
    H3: THREE.SkinnedMesh;
    O2_1: THREE.SkinnedMesh;
    T1_1: THREE.SkinnedMesh;
    T2_1: THREE.SkinnedMesh;
    O1: THREE.SkinnedMesh;
    H1: THREE.Bone;
    H2_1: THREE.Bone;
    O_main: THREE.Bone;
    H3_1: THREE.Bone;
    T_main: THREE.Bone;
    H2_5015: THREE.Bone;
    D_main: THREE.Bone;
    H2_5024: THREE.Bone;
    O_main2: THREE.Bone;
    G_main: THREE.Bone;
    H2_5044: THREE.Bone;
    O_main2_1: THREE.Bone;
  };
};

export function Logo(props: React.ComponentProps<"group">) {
  const group = useRef<THREE.Group>(null);
  const { nodes, animations } = useGLTF(
    "/assets/models/hotdog.glb",
  ) as unknown as GLTFResult;
  const { actions } = useAnimations(animations, group);

  const material = useMemo(() => {
    return new THREE.MeshStandardMaterial({
      color: theme.colors.neutral[70],
    });
  }, []);

  useEffect(() => {
    if (actions.Scene) {
      actions.Scene.setLoop(THREE.LoopOnce, 1);
      actions.Scene.clampWhenFinished = true;

      actions.Scene.play();
    }
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" position={[-1.778, 0.441, 0.218]}>
          <primitive object={nodes.H1} />
          <primitive object={nodes.H2_1} />
          <primitive object={nodes.O_main} />
          <primitive object={nodes.H3_1} />
          <primitive object={nodes.T_main} />
          <primitive object={nodes.H2_5015} />
          <primitive object={nodes.D_main} />
          <primitive object={nodes.H2_5024} />
          <primitive object={nodes.O_main2} />
          <primitive object={nodes.G_main} />
          <primitive object={nodes.H2_5044} />
        </group>
        <group name="Armature001" position={[-3.695, 0.112, 0.218]}>
          <primitive object={nodes.O_main2_1} />
        </group>
        <skinnedMesh
          name="D1_1"
          geometry={nodes.D1_1.geometry}
          material={material}
          castShadow
          receiveShadow
          skeleton={nodes.D1_1.skeleton}
          morphTargetDictionary={nodes.D1_1.morphTargetDictionary}
          morphTargetInfluences={nodes.D1_1.morphTargetInfluences}
          position={[-1.778, 0.441, 0.218]}
        />
        <skinnedMesh
          name="D2_1"
          geometry={nodes.D2_1.geometry}
          material={material}
          castShadow
          receiveShadow
          skeleton={nodes.D2_1.skeleton}
          morphTargetDictionary={nodes.D2_1.morphTargetDictionary}
          morphTargetInfluences={nodes.D2_1.morphTargetInfluences}
          position={[-1.778, 0.441, 0.218]}
        />
        <skinnedMesh
          name="G1_1"
          geometry={nodes.G1_1.geometry}
          material={material}
          castShadow
          receiveShadow
          skeleton={nodes.G1_1.skeleton}
          morphTargetDictionary={nodes.G1_1.morphTargetDictionary}
          morphTargetInfluences={nodes.G1_1.morphTargetInfluences}
          position={[-1.778, 0.441, 0.218]}
        />
        <skinnedMesh
          name="G2_1"
          geometry={nodes.G2_1.geometry}
          material={material}
          castShadow
          receiveShadow
          skeleton={nodes.G2_1.skeleton}
          morphTargetDictionary={nodes.G2_1.morphTargetDictionary}
          morphTargetInfluences={nodes.G2_1.morphTargetInfluences}
          position={[-1.778, 0.441, 0.218]}
        />
        <skinnedMesh
          name="H1_1"
          geometry={nodes.H1_1.geometry}
          material={material}
          castShadow
          receiveShadow
          skeleton={nodes.H1_1.skeleton}
          position={[-1.778, 0.441, 0.218]}
        />
        <skinnedMesh
          name="h2"
          geometry={nodes.h2.geometry}
          material={material}
          castShadow
          receiveShadow
          skeleton={nodes.h2.skeleton}
          morphTargetDictionary={nodes.h2.morphTargetDictionary}
          morphTargetInfluences={nodes.h2.morphTargetInfluences}
          position={[-1.778, 0.441, 0.218]}
        />
        <skinnedMesh
          name="H3"
          geometry={nodes.H3.geometry}
          material={material}
          castShadow
          receiveShadow
          skeleton={nodes.H3.skeleton}
          morphTargetDictionary={nodes.H3.morphTargetDictionary}
          morphTargetInfluences={nodes.H3.morphTargetInfluences}
          position={[-1.778, 0.441, 0.218]}
        />
        <skinnedMesh
          name="O2_1"
          geometry={nodes.O2_1.geometry}
          material={material}
          castShadow
          receiveShadow
          skeleton={nodes.O2_1.skeleton}
          morphTargetDictionary={nodes.O2_1.morphTargetDictionary}
          morphTargetInfluences={nodes.O2_1.morphTargetInfluences}
          position={[-1.778, 0.441, 0.218]}
        />
        <skinnedMesh
          name="T1_1"
          geometry={nodes.T1_1.geometry}
          material={material}
          castShadow
          receiveShadow
          skeleton={nodes.T1_1.skeleton}
          morphTargetDictionary={nodes.T1_1.morphTargetDictionary}
          morphTargetInfluences={nodes.T1_1.morphTargetInfluences}
          position={[-1.778, 0.441, 0.218]}
        />
        <skinnedMesh
          name="T2_1"
          geometry={nodes.T2_1.geometry}
          material={material}
          castShadow
          receiveShadow
          skeleton={nodes.T2_1.skeleton}
          morphTargetDictionary={nodes.T2_1.morphTargetDictionary}
          morphTargetInfluences={nodes.T2_1.morphTargetInfluences}
          position={[-1.778, 0.441, 0.218]}
        />
        <skinnedMesh
          name="O1"
          geometry={nodes.O1.geometry}
          material={material}
          castShadow
          receiveShadow
          skeleton={nodes.O1.skeleton}
          morphTargetDictionary={nodes.O1.morphTargetDictionary}
          morphTargetInfluences={nodes.O1.morphTargetInfluences}
          position={[-3.695, 0.112, 0.218]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/assets/models/hotdog.glb");
